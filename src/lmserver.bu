variant: fcos
version: 1.4.0
passwd:
  users:
    - name: core
      ssh_authorized_keys:
      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMFJhPTPfNQuNCuz9AESupcGOwLtg8Xp+qTnv2+qU94O
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCuyHMuKWZIxf63X1Ve6nU6+D/Ku+Y6c2pC8OYMDbzQrxr1AQCvoxP/zVimLbl4cur66GXE3RqcRH6UHC1q6YR2vlWBcZvDlojnHWRmqvcFlsuv7RxdF5DVatzrfQ6l1m0jy+Ey3djBGKwH5fIxKTpMZVkERFXYSNDLwyMqTisbBI9e32nOHFeG5dcH6mdloAyICbdMnDTn5pl1ztjEOqZ+TKtv0ZEf4o0iHMCKFwJBJnJ2OGTqNycjt6VeTPaMdpGetfCxCuA7lmdGV6IoooEkxKTp9J1+DBmTTGgo1ivfb6EZVSL6EQysieL+eYhcASKkiKaoQOylqysHbk49TJUBMX2H3yLq9N80h6dhDjtdWtCpuaD0KKpnxF5J3agi9z2gywVgzv38hik2ApE1T0ny/ZtwnnXOw3sNMaS6yBp9yw/KqsuKBrSqDYufqQbsce/sAjzR4B4ELauvol0AvlK+5gSDTZoDI6VgbOyJkFVFZbkOqAXTZZ/cBPJ8+ZzSBsNjW6YHvl7mJsdi9ZuUT2OhH2CKF3+rcVaBBcdzMqSMcwUWYf5J4n7yTleCuPau+klkHzM+QbHEPN+65dSqdk0nwgSiwK0OaalHuYNVlNPyji1lkLVLFwsgpE7lIpRxPrYOI6fVY/Fo0EhW3oIktvyohKRF1TaISsILRr2m/b7VLQ==
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCse8TLb47f+zddmzm0EvO6+RK8eeQouClEFA33ftG6+ioiJxkNf+vXwtWVlmA4JzwhLDQ5tKk+SQ9OTg/JMB8O9VfaK9LHxhJhLdiNo+P8W/vK9BI6CNCA1F+rbzN3OtEavYum7eHxeUrnYM+VkGyUpi5zmbHYF30VgxYeLMoK66eriFo+EHoQwv137uUgGYxe1BLGwkHjWdZ6wgjPkZTu4QoAsdxptVZH16TsFJKEQJdetJbJQ+I86yPjZ4AU5ImzdWUbUA4ic8gIZDhZeLz2UCmRB/EilNVKzQb+m54rE+cRH7f63zcEkqnAb5Ugz+XRMtdtqxcx2x9Eza2ohk8ZblyE8s3D2c4KR4YKzZJhuakK/sQ9FKOJo6vy2G6Mq1PMUhMF3rn+whUzXBpV2A0XK8P0H7/D+7zsGnQH+NZb6akgE+SqonL+zK430xWhWvoE7irtPh9CeG8+AF9OD+nbGBs22HpXCeR+yW2tPfJQtHLBOkaWyzJIsqfl4cMWaCRMnRKl/QEJuu9dG3rtOcZyBvkBnKd0X1GNIN5t1BMuhKghkipBgrG2oMM3hBRafHafrg26ikIImuImqVvaWZWeKKjU5tsivu/PELa4vyF/PqJ7meFqf1V2Jpw2Z21nSVQsgXK34Kbx5r6GSIdea+9cdEsJabKS7VrqwmSY8NjCZQ==
      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHeSNxaHLaTr/8VMYRiKzzORR1mnJmkJqN8yCXhQ3V6N
kernel_arguments:
  should_exist:
    - selinux=0
storage:
  files:
    - path: /etc/hostname
      mode: 0644
      contents:
        inline: lmserver
    - path: /etc/zincati/config.d/51-rollout-wariness.toml
      contents:
        inline: |
          [identity]
          rollout_wariness = 0.2
    - path: /etc/zincati/config.d/55-updates-strategy.toml
      contents:
        inline: |
          [updates]
          strategy = "periodic"
          [[updates.periodic.window]]
          days = [ "Sat", "Sun" ]
          start_time = "06:00"
          length_minutes = 60
    - path: /etc/systemd/resolved.conf
      contents:
        inline: |
          [Resolve]
          DNSStubListener=no
    - path: /etc/resolv.conf.manual
      contents:
        inline: |
          search mdekort.lan
          nameserver 10.204.0.1
          nameserver 2a02:a45b:51f6:100::1
  links:
    - path: /etc/localtime
      target: /usr/share/zoneinfo/Europe/Amsterdam
    - path: /etc/resolv.conf
      target: /etc/resolv.conf.manual
systemd:
  units:
    - name: var-mnt-storage.mount
      enabled: true
      contents: |
        [Unit]
        Description=Mount storage directory

        [Mount]
        What=LABEL=storage
        Where=/var/mnt/storage
        Type=btrfs
        Options=defaults,nofail,noatime,autodefrag

        [Install]
        WantedBy=multi-user.target
    - name: btrfs-scrub.service
      enabled: false
      contents: |
        [Unit]
        Description=Scrub a BTRFS filesystem, check volume for errors

        [Service]
        Nice=19
        IOSchedulingClass=idle
        KillSignal=SIGINT
        ExecStart=/usr/sbin/btrfs scrub start -B /dev/disk/by-label/storage
    - name: btrfs-scrub.timer
      enabled: true
      contents: |
        [Unit]
        Description=Trigger BTRFS scrub on storage filesystem

        [Timer]
        OnCalendar=monthly
        AccuracySec=1d
        RandomizedDelaySec=1w
        Persistent=true

        [Install]
        WantedBy=timers.target
    - name: docker.service
      enabled: true
    - name: portainer.service
      enabled: true
      contents: |
        [Unit]
        Description=Portainer Service
        After=docker.service
        Requires=docker.service

        [Service]
        Restart=always
        ExecStartPre=-mkdir -p /var/mnt/storage/docker/portainer
        ExecStartPre=-/usr/bin/docker rm -f portainer
        ExecStartPre=-/usr/bin/docker pull portainer/portainer-ce:alpine
        ExecStartPre=/usr/bin/docker create \
          --name portainer \
          --rm \
          --volume /var/mnt/storage/docker/portainer:/data:rw \
          --volume /var/run/docker.sock:/var/run/docker.sock:ro \
          --log-driver syslog \
          --log-opt 'syslog-address=udp://127.0.0.1:515' \
          --log-opt 'tag={{.Name}}/{{.FullID}}' \
          --publish 9443:9443 \
          portainer/portainer-ee:alpine
        ExecStart=/usr/bin/docker start -a portainer

        [Install]
        WantedBy=multi-user.target
